 @model MVCSongs.ViewModels.SongArtistGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h1 class="my-4">Songs</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
}

<form asp-controller="Songs" asp-action="Index" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-3">
            <select asp-for="Zanr" asp-items="Model.Genre" class="form-select">
                <option value="">All Genres</option>
            </select>
        </div>
        <div class="col-md-3">
            <input type="text" asp-for="Naslov" class="form-control" placeholder="Title" />
        </div>
        <div class="col-md-3">
            <input type="text" asp-for="Peac" class="form-control" placeholder="Artist" />
        </div>
        <div class="col-md-3">
            <input type="submit" value="Filter" class="btn btn-secondary w-100" />
        </div>
    </div>
</form>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Songs[0].Title)</th>
            <th>@Html.DisplayNameFor(model => model.Songs[0].Year)</th>
            
            <th>@Html.DisplayNameFor(model => model.Songs[0].Description)</th>
            <th>@Html.DisplayNameFor(model => model.Songs[0].Publisher)</th>
            <th>@Html.DisplayNameFor(model => model.Songs[0].AlbumCover)</th>
            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin") || User.IsInRole("User"))
            {
                <th>@Html.DisplayNameFor(model => model.Songs[0].SongUrl)</th>

            }
            <th>Rating</th>
            <th>Artists</th>
            <th>Genres</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Songs)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Year)</td>
                
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.Publisher)</td>
                <td>
                    <img src="~/images/@Html.DisplayFor(modelItem => item.AlbumCover)" class="img-fluid" style="height: 200px; width: 350px;" />
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin") || User.IsInRole("User"))
                    {
                        @if (!string.IsNullOrEmpty(item.SongUrl))
                        {
                            <iframe width="150" height="100" src="@item.SongUrl" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                            
                        }
                    }

                </td>
                <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                <td>
                    @foreach (var artist in item.SongArtist)
                    {
                        @Html.DisplayFor(modelItem => artist.Artist.Name)
                        <br />
                    }
                </td>
                <td>
                    @foreach (var genre in item.SongsGenre)
                    {
                        @Html.DisplayFor(modelItem => genre.Genre.GenreName)
                        <br />
                    }
                </td>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                }
                
            </tr>
        }
    </tbody>
   

</table>
