 @model IEnumerable<MVCSongs.Models.SongsGenre>

@{
    ViewData["Title"] = "Song Genres";
}

<!-- Custom Styles -->
<style>
    body {
        background-color: #f0f8ff;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        color: #333;
    }

    h1 {
        color: #333;
        text-align: center;
        margin-top: 30px;
        font-size: 2.5em;
    }

    .create-new {
        text-align: center;
        margin-top: 20px;
    }

        .create-new a {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

            .create-new a:hover {
                background-color: #0056b3;
            }

    .table {
        width: 80%;
        margin: 30px auto;
        border-collapse: collapse;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        .table th, .table td {
            padding: 15px;
            text-align: left;
        }

        .table thead th {
            background-color: #007bff;
            color: white;
            font-weight: bold;
        }

        .table tbody tr:nth-child(odd) {
            background-color: #f9f9f9;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
        }

        .table a {
            color: #007bff;
            text-decoration: none;
            transition: color 0.3s ease;
        }

            .table a:hover {
                color: #0056b3;
                text-decoration: underline;
            }
</style>

<h1>Song Genres</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="create-new">
        <a asp-action="Create">Create New</a>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SongId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SongId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre.Id)
                </td>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
